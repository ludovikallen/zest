// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from './client';
import type { PostRegisterData, PostRegisterResponses, PostRegisterErrors, PostLoginData, PostLoginResponses, PostRefreshData, PostRefreshResponses, MapIdentityApiConfirmEmailData, MapIdentityApiConfirmEmailResponses, PostResendConfirmationEmailData, PostResendConfirmationEmailResponses, PostForgotPasswordData, PostForgotPasswordResponses, PostForgotPasswordErrors, PostResetPasswordData, PostResetPasswordResponses, PostResetPasswordErrors, PostManage2FaData, PostManage2FaResponses, PostManage2FaErrors, GetManageInfoData, GetManageInfoResponses, GetManageInfoErrors, PostManageInfoData, PostManageInfoResponses, PostManageInfoErrors, PostLogoutData, PostLogoutResponses, GetAccountStatusData, GetAccountStatusResponses, GetWeatherForecastData, GetWeatherForecastResponses, GetWeatherForecastErrors } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

class MapIdentityApi {
    public static confirmEmail<ThrowOnError extends boolean = false>(options: Options<MapIdentityApiConfirmEmailData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<MapIdentityApiConfirmEmailResponses, unknown, ThrowOnError>({
            url: '/confirmEmail',
            ...options
        });
    }
}

export class ExampleVersion1000CultureNeutralPublicKeyTokenNull {
    public static postRegister<ThrowOnError extends boolean = false>(options: Options<PostRegisterData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<PostRegisterResponses, PostRegisterErrors, ThrowOnError>({
            url: '/register',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers
            }
        });
    }
    
    public static postLogin<ThrowOnError extends boolean = false>(options: Options<PostLoginData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<PostLoginResponses, unknown, ThrowOnError>({
            url: '/login',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers
            }
        });
    }
    
    public static postRefresh<ThrowOnError extends boolean = false>(options: Options<PostRefreshData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<PostRefreshResponses, unknown, ThrowOnError>({
            url: '/refresh',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers
            }
        });
    }
    
    public static postResendConfirmationEmail<ThrowOnError extends boolean = false>(options: Options<PostResendConfirmationEmailData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<PostResendConfirmationEmailResponses, unknown, ThrowOnError>({
            url: '/resendConfirmationEmail',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers
            }
        });
    }
    
    public static postForgotPassword<ThrowOnError extends boolean = false>(options: Options<PostForgotPasswordData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<PostForgotPasswordResponses, PostForgotPasswordErrors, ThrowOnError>({
            url: '/forgotPassword',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers
            }
        });
    }
    
    public static postResetPassword<ThrowOnError extends boolean = false>(options: Options<PostResetPasswordData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<PostResetPasswordResponses, PostResetPasswordErrors, ThrowOnError>({
            url: '/resetPassword',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers
            }
        });
    }
    
    public static postManage2Fa<ThrowOnError extends boolean = false>(options: Options<PostManage2FaData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<PostManage2FaResponses, PostManage2FaErrors, ThrowOnError>({
            url: '/manage/2fa',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers
            }
        });
    }
    
    public static getManageInfo<ThrowOnError extends boolean = false>(options?: Options<GetManageInfoData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetManageInfoResponses, GetManageInfoErrors, ThrowOnError>({
            url: '/manage/info',
            ...options
        });
    }
    
    public static postManageInfo<ThrowOnError extends boolean = false>(options: Options<PostManageInfoData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).post<PostManageInfoResponses, PostManageInfoErrors, ThrowOnError>({
            url: '/manage/info',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options.headers
            }
        });
    }
    
    public static postLogout<ThrowOnError extends boolean = false>(options?: Options<PostLogoutData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).post<PostLogoutResponses, unknown, ThrowOnError>({
            url: '/logout',
            ...options
        });
    }
    
    public static getAccountStatus<ThrowOnError extends boolean = false>(options?: Options<GetAccountStatusData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetAccountStatusResponses, unknown, ThrowOnError>({
            url: '/account/status',
            ...options
        });
    }
    static mapIdentityApi = MapIdentityApi;
}

export class WeatherForecast {
    public static getWeatherForecast<ThrowOnError extends boolean = false>(options?: Options<GetWeatherForecastData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetWeatherForecastResponses, GetWeatherForecastErrors, ThrowOnError>({
            url: '/WeatherForecast',
            ...options
        });
    }
}