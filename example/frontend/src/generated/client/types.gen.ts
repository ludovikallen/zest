// This file is auto-generated by @hey-api/openapi-ts

export type AccessTokenResponseReadable = {
    readonly tokenType: string | null;
    accessToken: string | null;
    expiresIn: number;
    refreshToken: string | null;
};

export type AccessTokenResponseWritable = {
    accessToken: string | null;
    expiresIn: number;
    refreshToken: string | null;
};

export type ForgotPasswordRequest = {
    email: string | null;
};

export type HttpValidationProblemDetails = {
    type?: string | null;
    title?: string | null;
    status?: number | null;
    detail?: string | null;
    instance?: string | null;
    errors: {
        [key: string]: Array<string>;
    } | null;
    [key: string]: unknown | (string | null) | (string | null) | (number | null) | (string | null) | (string | null) | ({
        [key: string]: Array<string>;
    } | null) | undefined;
};

export type InfoRequest = {
    newEmail?: string | null;
    newPassword?: string | null;
    oldPassword?: string | null;
};

export type InfoResponse = {
    email: string | null;
    isEmailConfirmed: boolean;
};

export type LoginRequest = {
    email: string | null;
    password: string | null;
    twoFactorCode?: string | null;
    twoFactorRecoveryCode?: string | null;
};

export type RefreshRequest = {
    refreshToken: string | null;
};

export type RegisterRequest = {
    email: string | null;
    password: string | null;
};

export type ResendConfirmationEmailRequest = {
    email: string | null;
};

export type ResetPasswordRequest = {
    email: string | null;
    resetCode: string | null;
    newPassword: string | null;
};

export type TwoFactorRequest = {
    enable?: boolean | null;
    twoFactorCode?: string | null;
    resetSharedKey: boolean;
    resetRecoveryCodes: boolean;
    forgetMachine: boolean;
};

export type TwoFactorResponse = {
    sharedKey: string | null;
    recoveryCodesLeft: number;
    recoveryCodes?: Array<string> | null;
    isTwoFactorEnabled: boolean;
    isMachineRemembered: boolean;
};

export type WeatherForecastReadable = {
    date: string;
    temperatureC: number;
    readonly temperatureF: number;
    summary?: string | null;
};

export type WeatherForecastWritable = {
    date: string;
    temperatureC: number;
    summary?: string | null;
};

export type PostRegisterData = {
    body: RegisterRequest;
    path?: never;
    query?: never;
    url: '/register';
};

export type PostRegisterErrors = {
    /**
     * Bad Request
     */
    400: HttpValidationProblemDetails;
};

export type PostRegisterError = PostRegisterErrors[keyof PostRegisterErrors];

export type PostRegisterResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PostLoginData = {
    body: LoginRequest;
    path?: never;
    query?: {
        useCookies?: boolean;
        useSessionCookies?: boolean;
    };
    url: '/login';
};

export type PostLoginResponses = {
    /**
     * OK
     */
    200: AccessTokenResponseReadable;
};

export type PostLoginResponse = PostLoginResponses[keyof PostLoginResponses];

export type PostRefreshData = {
    body: RefreshRequest;
    path?: never;
    query?: never;
    url: '/refresh';
};

export type PostRefreshResponses = {
    /**
     * OK
     */
    200: AccessTokenResponseReadable;
};

export type PostRefreshResponse = PostRefreshResponses[keyof PostRefreshResponses];

export type MapIdentityApiConfirmEmailData = {
    body?: never;
    path?: never;
    query: {
        userId: string;
        code: string;
        changedEmail?: string;
    };
    url: '/confirmEmail';
};

export type MapIdentityApiConfirmEmailResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PostResendConfirmationEmailData = {
    body: ResendConfirmationEmailRequest;
    path?: never;
    query?: never;
    url: '/resendConfirmationEmail';
};

export type PostResendConfirmationEmailResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PostForgotPasswordData = {
    body: ForgotPasswordRequest;
    path?: never;
    query?: never;
    url: '/forgotPassword';
};

export type PostForgotPasswordErrors = {
    /**
     * Bad Request
     */
    400: HttpValidationProblemDetails;
};

export type PostForgotPasswordError = PostForgotPasswordErrors[keyof PostForgotPasswordErrors];

export type PostForgotPasswordResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PostResetPasswordData = {
    body: ResetPasswordRequest;
    path?: never;
    query?: never;
    url: '/resetPassword';
};

export type PostResetPasswordErrors = {
    /**
     * Bad Request
     */
    400: HttpValidationProblemDetails;
};

export type PostResetPasswordError = PostResetPasswordErrors[keyof PostResetPasswordErrors];

export type PostResetPasswordResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PostManage2FaData = {
    body: TwoFactorRequest;
    path?: never;
    query?: never;
    url: '/manage/2fa';
};

export type PostManage2FaErrors = {
    /**
     * Bad Request
     */
    400: HttpValidationProblemDetails;
    /**
     * Not Found
     */
    404: unknown;
};

export type PostManage2FaError = PostManage2FaErrors[keyof PostManage2FaErrors];

export type PostManage2FaResponses = {
    /**
     * OK
     */
    200: TwoFactorResponse;
};

export type PostManage2FaResponse = PostManage2FaResponses[keyof PostManage2FaResponses];

export type GetManageInfoData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/manage/info';
};

export type GetManageInfoErrors = {
    /**
     * Bad Request
     */
    400: HttpValidationProblemDetails;
    /**
     * Not Found
     */
    404: unknown;
};

export type GetManageInfoError = GetManageInfoErrors[keyof GetManageInfoErrors];

export type GetManageInfoResponses = {
    /**
     * OK
     */
    200: InfoResponse;
};

export type GetManageInfoResponse = GetManageInfoResponses[keyof GetManageInfoResponses];

export type PostManageInfoData = {
    body: InfoRequest;
    path?: never;
    query?: never;
    url: '/manage/info';
};

export type PostManageInfoErrors = {
    /**
     * Bad Request
     */
    400: HttpValidationProblemDetails;
    /**
     * Not Found
     */
    404: unknown;
};

export type PostManageInfoError = PostManageInfoErrors[keyof PostManageInfoErrors];

export type PostManageInfoResponses = {
    /**
     * OK
     */
    200: InfoResponse;
};

export type PostManageInfoResponse = PostManageInfoResponses[keyof PostManageInfoResponses];

export type PostLogoutData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/logout';
};

export type PostLogoutResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetAccountStatusData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/account/status';
};

export type GetAccountStatusResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetWeatherForecastData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/WeatherForecast';
};

export type GetWeatherForecastErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
};

export type GetWeatherForecastResponses = {
    /**
     * OK
     */
    200: Array<WeatherForecastReadable>;
};

export type GetWeatherForecastResponse = GetWeatherForecastResponses[keyof GetWeatherForecastResponses];

export type ClientOptions = {
    baseUrl: `${string}://${string}` | (string & {});
};